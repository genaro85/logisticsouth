Crear Lista Estatus public function txtCotEstatus_Create($strControlId = null) {        $this->txtCotEstatus = new QListBox($this->objParentObject, $strControlId);			//Declaro tipo QListBox        $this->txtCotEstatus->Name = QApplication::Translate('Cot Estatus');			//Nombre del Campo        $this->txtCotEstatus->AddItem(QApplication::Translate('- Select One -'), null);		//Campo Null Seleccionar Uno        $ListaEstatus = array(1=>'Pendiente',2=>'Cerrada');				            //Lista de Estatus        if ($ListaEstatus) foreach ($ListaEstatus as $objMat) {                $objListItem = new QListItem($objMat, $objMat);                if ($this->objCotizacion->CotEstatus == $objMat)					//Comparacion con el campo de la BD                    $objListItem->Selected = true;                $this->txtCotEstatus->AddItem($objListItem);            }        return $this->txtCotEstatus;    }Crear Calendario- Primero ( draft/cotizacion_edit.php )protected $calCalendar;												//Declaro la variable- SegundoEn Form_Create() hago lo siguiente$this->calCotFecha = $this->mctCotizacion->calCotFecha_Create(); 						//Campo previamente creado$this->calCalendar = new QCalendar($this, $this->calCotFecha);							//Inicializo el QCalendar$this->calCotFecha->AddAction(new QFocusEvent(), new QBlurControlAction($this->calCotFecha));		//Creo el evento cuando haga clic sobre calCotFecha$this->calCotFecha->AddAction(new QClickEvent(), new QShowCalendarAction($this->calCalendar));- Tercero ( draft/cotizacion_edit.tpl.php )en <div id="formControls">	<?php $this->calCotFecha->RenderWithName(); ?>	<div style="margin-left: 415px;"><?php $this->calCalendar->Render(); ?></div>				//Va debajo del campo de entrada- Cuarto( includes\data_meta_controls\generated\CotizacionMetaControlGen.class.php )    public function calCotFecha_Create($strControlId = null) {        $this->calCotFecha = new QDateTimeTextBox($this->objParentObject, $strControlId);			//Cambias el tipo de QDateTimePicker a QDateTimeTextBox        $this->calCotFecha->Name = QApplication::Translate('Fecha');						//Nombre del campo        if ($this->objCotizacion->CotFecha)            $this->calCotFecha->Text = $this->objCotizacion->CotFecha->__toString();        $this->calCotFecha->Required = true;        return $this->calCotFecha;    }Cargar Archivo (includes\data_meta_controls\generated\ArchivoOtMetaControlGen.class.php)    public function txtArcArchivo_Create($strControlId = null) {        $this->txtArcArchivo = new QFileAsset($this->objParentObject, $strControlId);        $this->txtArcArchivo->TemporaryUploadPath = __DOCROOT__ . '/qcube/Archivos';        if ($this->objArchivoOt->ArcArchivo)            $this->txtArcArchivo->SetFile(str_replace('/','\\',__DOCROOT__ . substr($this->objArchivoOt->ArcArchivo, strlen(__VIRTUAL_DIRECTORY__))));        $this->txtArcArchivo->ClickToView = true;        $this->txtArcArchivo->CssClass = 'file_asset';        $this->txtArcArchivo->imgFileIcon->CssClass = 'file_asset_icon';        $this->txtArcArchivo->Name = QApplication::Translate('Archivo');        return $this->txtArcArchivo;    }